// Generated by CoffeeScript 1.7.1
(function() {
  var FILLIN, TEXT, TRM, TYPES, alert, assert, badge, custom_fill_in, d, data, debug, echo, formats, help, info, log, rpr, template, templates, warn, whisper, _i, _j, _len, _len1;

  TYPES = require('coffeenode-types');

  TEXT = require('coffeenode-text');

  TRM = require('coffeenode-trm');

  rpr = TRM.rpr.bind(TRM);

  badge = 'FILLIN';

  log = TRM.get_logger('plain', badge);

  info = TRM.get_logger('info', badge);

  whisper = TRM.get_logger('whisper', badge);

  alert = TRM.get_logger('alert', badge);

  debug = TRM.get_logger('debug', badge);

  warn = TRM.get_logger('warn', badge);

  help = TRM.get_logger('help', badge);

  echo = TRM.echo.bind(TRM);

  assert = require('assert');

  FILLIN = require('./main');

  this.main = function() {
    return this.test_string_interpolation;
  };

  templates = ["helo name", "helo ${name}", "helo \\${name}", "helo ${{name}}", "helo $name!", "helo +name!", "helo !+name!"];

  this.test_string_interpolation = function() {};

  data = {
    'name': 'Jim'
  };

  formats = {
    'quoted': function(text) {
      return '"' + text + '"';
    }
  };

  for (_i = 0, _len = templates.length; _i < _len; _i++) {
    template = templates[_i];
    log(TRM.green('A'), TRM.grey(template), TRM.gold(FILLIN.fill_in(template, data, formats)));
  }

  custom_fill_in = FILLIN.fill_in.create(null, '+', '(', ')', '~', '!');

  for (_j = 0, _len1 = templates.length; _j < _len1; _j++) {
    template = templates[_j];
    log(TRM.red('B'), TRM.grey(template), TRM.gold(custom_fill_in(template, data, formats)));
  }

  d = {
    meaningless: [
      42, 43, {
        foo: 1,
        bar: 2,
        nested: ['a', 'b']
      }, 45
    ],
    deep: {
      down: {
        "in": {
          a: {
            drawer: '${/my-things/pen}',
            cupboard: '${/my-things/pot}',
            box: '${${locations/for-things}/variable}'
          }
        }
      }
    },
    'my-things': {
      pen: 'a pen',
      pot: 'a pot',
      pill: 'a pill',
      variable: '${/my-things/pill}'
    },
    locations: {
      'for-things': '/my-things'
    },
    ping1: '${/ping4}',
    ping2: '${/ping3}',
    ping3: '${/ping2}',
    ping4: '${/ping1}',
    pong: '${/ping1}'
  };

  this.main();

}).call(this);
